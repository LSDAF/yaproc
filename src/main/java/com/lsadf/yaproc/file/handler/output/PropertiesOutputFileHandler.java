package com.lsadf.yaproc.file.handler.output;

import com.lsadf.yaproc.file.ContentMap;
import com.lsadf.yaproc.file.FileFormat;
import com.lsadf.yaproc.util.FileUtils;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Arrays;
import java.util.Properties;

public class PropertiesOutputFileHandler implements OutputFileHandler {

    private OutputFileHandler nextHandler;

    /**
     * {@inheritDoc}
     */
    @Override
    public void handleFile(File outputFile, ContentMap contentMap, boolean force) throws IOException {
        String type = FileUtils.getFileExtension(outputFile);
        if (Arrays.stream(getType().getExtensions()).noneMatch(ext -> ext.equalsIgnoreCase(type))) {
            if (nextHandler != null) {
                nextHandler.handleFile(outputFile, contentMap, force);
            }
        }

        Properties properties = new Properties();
        contentMap.forEach((key, value) -> properties.setProperty(key, value.toString()));

        // Ensure parent directories exist
        File parent = outputFile.getParentFile();
        if (parent != null && !parent.exists()) {
            parent.mkdirs();
        }

        // Write properties to file
        try (OutputStream output = new FileOutputStream(outputFile)) {
            properties.store(output, "Generated by Yaproc");
        }

    }

    @Override
    public void setNextHandler(OutputFileHandler nextHandler) {
        this.nextHandler = nextHandler;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileFormat getType() {
        return FileFormat.PROPERTIES;
    }
}
